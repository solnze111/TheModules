<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.ee</groupId>
    <artifactId>TheModules</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <modules>
        <module>database</module>
        <module>aservices</module>
        <module>webs</module>
    </modules>

    <!-- env.-->
    <!-- System.getProperty -D-->
    <!--<...blabla> env.HOME</blabla...>-->
    <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>17</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <junit.jupiter.version>5.9.3</junit.jupiter.version>
        <junit.platform.version>1.9.3</junit.platform.version>
        <org.mapstruct.version>1.5.5.Final</org.mapstruct.version>
        <version.mapstruct-lombok>0.2.0</version.mapstruct-lombok>
        <spring.version>6.1.6</spring.version>
        <app.env>dev</app.env>
    </properties>
    <distributionManagement>
        <repository>
            <id>mynexus</id>
            <url>http://localhost:8081/repository/maven-releases/</url>
        </repository>
        <snapshotRepository>
            <id>maven-snapshots</id>
            <url>http://localhost:8081/repository/maven-snapshots/</url>
        </snapshotRepository>
    </distributionManagement>

    <!-- all in dependencyManagement do not direct overidde in other modules-->
    <!-- if you need one of them, just copy to your module pom.xml without version and scope-->
    <dependencyManagement>
        <dependencies>
            <!-- https://mvnrepository.com/artifact/org.springframework/spring-aop -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-aop</artifactId>
                <version>${spring.version}</version>
            </dependency>


            <!-- https://mvnrepository.com/artifact/jakarta.servlet/jakarta.servlet-api -->
            <dependency>
                <groupId>jakarta.servlet</groupId>
                <artifactId>jakarta.servlet-api</artifactId>
                <version>6.1.0-M2</version>
                <scope>provided</scope>
            </dependency>
            <!-- https://mvnrepository.com/artifact/org.postgresql/postgresql -->
            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>42.7.3</version>
            </dependency>
            <!-- https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api -->
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-api</artifactId>
                <version>5.10.2</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>1.18.26</version>
                <scope>compile</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <scm>
        <connection>scm:git:git@github.com:solnze111/TheModules.git</connection>
        <developerConnection>scm:git:git@github.com:solnze111/TheModules.git</developerConnection>
        <tag>HEAD</tag>
    </scm>

    <!--example superPOM --> <!-- --> <!-- --> <!-- --> <!-- -->
    <build>
        <resources>
            <resource>
                <directory>${project.basedir}/src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <!--final name will be in every module, don't use it here -->
        <!--  <finalName>ROOTMODULES</finalName> -->

        <!--same like in dependencyManagement take plugin to your project
         without version and scope-->
        <!-- ============================================== -->
        <!--this plugin will be seen in every module Projects -->

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>3.0.1</version>

                <configuration>
                    <!-- tag: default : our artifactId-version -->
                    <!-- All dependencies can NOT be SNAPSHOT !!! -->
                    <arguments>-DignoreSnapshots=true</arguments>
                </configuration>
            </plugin>
        </plugins>

        <pluginManagement>
            <!-- here plugin will see only overridden in project where need one of plugins from here -->
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.13.0</version>
                    <configuration>
                        <!-- put your configurations here -->
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                        <annotationProcessorPaths>
                            <path>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok</artifactId>
                                <version>1.18.28</version>
                            </path>
                        </annotationProcessorPaths>
                    </configuration>
                </plugin>


                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>3.2.5</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>integration-test</goal>
                                <goal>verify</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

</project>